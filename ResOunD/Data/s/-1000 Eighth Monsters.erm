ZVSE2
; Author:   Archer30
; Special thanks to Hawaiing and daemon_n for their memory hacks
; Engine:   ERM 2.0+
; Requires: ERA 3.3+, Era Erm Framework, Third Upgrade Mod

; 8th creature is now available for every faction!
; Portal of Summoning can no longer be shown from fort dialogue for obvious reason.

; You can customise the 8th creatures by editing this script. Simply search for "Customise here" to find where you need to patch

; To-Do:
; Fix not being able to recruit from left-clicking on left bottom of town screen (blocked by HD hook, now only Dungeon with Portal Of Summoning built works)


; ============== SETTINGS ==============
!#VRi^eighth_build8thDwellInterval_AI^:S3;[days between AI build 8th dwellings]
!#VRi^eighth_recruit8thMaxGoldPct_AI^:S50;[Max percent of gold spending on recruiting 8th creatures everyday for AI]
!#VRi^eighth_8thHotkey^:S(KEY_D);       [hotkey for left-click features in Town]
; ============ END SETTINGS ============


!?FU(eighth_RestrainValues);
!!VRi^eighth_build8thDwellInterval_AI^:F1/(INT_MAX);
!!VRi^eighth_recruit8thMaxGoldPct_AI^:F1/100;
!!VRi^eighth_8thHotkey^:F8/254;

!#FU(eighth_RestrainValues):P;

!#UN:P(WOG_OPT_8TH_MONSTERS)/?i^eighth_on^;


// Compatibility with Castle Upgrade
!?FU(OnEveryDay)&i^timerDay^=1/i^timerOnce^/i^eighth_on^;
!!UN:P45/?(castleUpgrading:y);
!!FU&(castleUpgrading)<>(TRUE):E;

!!re i/(TOWN_FIRST)/(TOWN_LAST_WOG);
  !!VR(index:y):Si *2 +1;
  !!SN:Mi^eighth_8thMonsList^/(index)/?(upgMon:y);
  !!MA:G(upgMon)/?(growth:y);
  !!SN:Vi^wog_45_upgMonList_%i^/14/(upgMon)/(growth);
!!en;

!?FU(WOG_45_SetUp8thSlot)&i^eighth_on^;
!#VA(townId:x) (mon:x);

!!VR(mon):S(NO_MON);

!!if&i^tum_upgGuild_%(townId)^/i^eighth_8thDwell_%(townId)^;
  !!CA0/(townId):T?(townType:y);
  !!VR(index:y):S(townType) *2 +1;
  !!SN:Mi^eighth_8thMonsList^/(index)/?(mon);
!!en;

// Fixed Alt+A upgrading 8th unit in towns
; Funciont is call in Third Upgrade Mod.erm - must be executed later than this script!
!?FU(tum_GetUpgMonInTown)&i^eighth_on^;
!#VA(monType:x) (town:x) (upgType:x);

!!if&i^eighth_8thDwell_%(town)^/i^tum_upgGuild_%(town)^;
  ; Get town type of the monster of the town and see if they match
  !!MA:O(monType)/?(ownerType:y);
  !!CA0/(town):T?(townType:y);

  !!if&(townType)=(ownerType);
    !!FU(eighth_Get8thMonByTownType):P(townType)/(TRUE)/?(upgMon:y)/?(nonUpgMon:y);
    !!VR(upgType)&(monType)=(nonUpgMon):S(upgMon);
  !!en;
!!en;

// Main Script
!?FU(tum_CreateERMHook)&i^eighth_on^;
!#VA(setHook:x);

!!SN:E(setHook)/1/6057058/(eighth_OnTownDlgSmallPortraitsRedraw); 5C6C62
*!SN:E(setHook)/1/6109287/(eighth_OnTownDlgMouseClick); [incompatible with HD]
!!SN:E(setHook)/1/6151653/(eighth_OnFortDlgSummonCreatureBuild);
!!SN:E(setHook)/1/5362350/(eighth_OnKODlgSmallPortraitsBuild);

!!SN:E(setHook)/1/5016413/(eighth_OnUpdatePortalMonsterOnNewWeek); 5016413

!?FU(OnAfterErmInstructions);
!!if&i^eighth_on^;

  ; Create 8 arrays with 9 items for dwellings on the map for every player
  ; Currently disabled as the efficiency looks ok
  *!re i/(PLAYER_FIRST)/(PLAYER_LAST);
    *!FU(NewIntArray):P9/?i^eighth_dwellQty_%i^/(M_TEMP);
  *!en;

  ; Create arrays with with 0 item for gold cost of 8th dwelling /pre-requirement building ID (for AI building)
  !!FU(NewIntArray):P9/?i^eighth_dwellReqDwellsList^/(M_STORED);

  !!re i/(TOWN_FIRST)/(TOWN_LAST_WOG);
    !!FU(NewIntArray):P7/?i^eighth_dwellCostsList_%i^/(M_STORED);
  !!en;

  ; Create global array for AI 8th dwelling numbers (for distributing budget on 8th creatures). One element for one player
  !!FU(NewIntArray):P8/?i^eighth_townsWith8thDwellAi^/(M_TEMP);
!!en;

; Create array for all 8th creature (for checking whether a dweliing has 8th creatures)
!!FU(NewIntArray):P18/?i^eighth_8thMonsList^/(M_STORED);

!!FU(eighth_SetUp8thMonLists):P;

!?FU(eighth_SetUp8thMonLists);
!!if&i^eighth_on^;
  ; Customise here
  ; You will need to define your values later than this (if executing from another erm)
  !!SN:Vi^eighth_dwellReqDwellsList^/0/34/32/35/31/31/33/33/32/30; [id of required buildings for each factions]

  !!SN:Vi^eighth_dwellCostsList_%(TOWN_CASTLE)^/0/10/0/10/0/10/0/10000;
  !!SN:Vi^eighth_dwellCostsList_%(TOWN_RAMPART)^/0/5/0/5/0/0/3/3000;
  !!SN:Vi^eighth_dwellCostsList_%(TOWN_TOWER)^/0/10/10/10/0/0/0/10000;
  !!SN:Vi^eighth_dwellCostsList_%(TOWN_INFERNO)^/0/5/0/5/0/0/5/5000;
  !!SN:Vi^eighth_dwellCostsList_%(TOWN_NECROPOLIS)^/0/5/0/0/0/3/0/3000;
  !!SN:Vi^eighth_dwellCostsList_%(TOWN_DUNGEON)^/0/0/4/5/0/0/0/4000;
  !!SN:Vi^eighth_dwellCostsList_%(TOWN_STRONGHOLD)^/0/5/0/5/0/0/5/5000;
  !!SN:Vi^eighth_dwellCostsList_%(TOWN_FORTRESS)^/0/10/0/0/3/0/0/4000;
  !!SN:Vi^eighth_dwellCostsList_%(TOWN_CONFLUX)^/0/5/0/5/0/0/0/2500;
!!en;

!!SN:Vi^eighth_8thMonsList^/0/(MON_LIGHT_TEMPLAR)/(MON_LIGHT_PALADIN)/(MON_DRYAD)/(MON_OAK_DRYAD)/(MON_DRAKE_GOLEM)/(MON_DRAGON_GOLEM)/
  (MON_SUCCUBUS)/(MON_LILIM)/(MON_WEREWOLF_TOW)/(MON_DIRE_WEREWOLF)/(MON_ILLITHID)/(MON_ALHOON);
!!SN:Vi^eighth_8thMonsList^/12/(MON_COUATL)/(MON_QUETZALCOUATL)/(MON_TROLL_HAG)/(MON_TROLL_WITCH)/(MON_TRITON)/(MON_ABYSSAL_TRITON);

!?FU(OnGameEnter)&i^eighth_on^;
; Store values
!!UN:C6130709/2/?i^eighth_patch1^;
!!UN:C6135068/1/?i^eighth_patch2^; 5D9D1C
!!UN:C5362651/1/4/?i^eighth_patch3^; 51D3DB

; Fort 
!!UN:C6130709/2/8427;                   [Show 8th slot without checks - JMP 005D8C37]

!?FU(OnGameLeave)&i^eighth_on^;
!!UN:C6130709/2/i^eighth_patch1^;
!!UN:C6135068/1/i^eighth_patch2^;
!!UN:C5362651/1/4/i^eighth_patch3^;

****************************************************************************************************

!?FU(OnEveryDay)&i^timerOnce^/i^timerWeekDay^=1/i^eighth_on^;
*!FU(eighth_GetAllExt8thDwell):P;
!!FU(eighth_Accum8thMon):P;

; Currently disabled as the efficiency looks ok
*?FU(eighth_GetAllExt8thDwell);
; Get dwelling quantity of 8th creatues on the map for every player
*!re i/(PLAYER_FIRST)/(PLAYER_LAST);
  *!FU(Array_Fill):Pi^eighth_dwellQty_%i^/0/0;
*!en;

*!VR(x:y):S-1;

*!re i;
  *!UN:U(OBJ_CREATURE_GENERATOR_1)/(ANY_OBJ)/-1/(x)/(y:y)/(z:y);
  *!br&(x)<0;

  *!DW(x)/(y)/(z):O?(owner:y);
  *!co&(owner)<=(NO_PLAYER);

  *!DW(x)/(y)/(z):M0/?(mon:y)/?(qty:y);
  *!FU(eighth_Check8thMonTown):P(mon)/?(eighthTown:y);
  *!co&(eighthTown)=(NO_TOWN);

  *!SN:Mi^eighth_dwellQty_%(owner)^/(eighthTown)/d1;
*!en;

!?FU(eighth_Accum8thMon);
!!UN:P45/?(castleUpgrading:y);

; Accumulate creatures for every town with 8th dwelling built
!!VR(x:y):S-1;

!!re i;
  !!UN:U(OBJ_TOWN)/(ANY_OBJ)/-1/(x)/(y:y)/(z:y);
  !!br&(x)<0;

  !!CA(x)/(y)/(z):U?(townId:y) T?(townType:y);
  !!co&i^eighth_8thDwell_%(townId)^=(FALSE);

  !!FU(eighth_Get8thGrowth):P(townId)/?(totalGrowth:y); [Total growth of everything added]
  !!FU(eighth_SetOrGet8thMonByTownId):P(townId)/d/d(totalGrowth); [set]
!!en;

!?FU(eighth_Check8thMonTown);
!#VA(mon:x) (eighthTown:x);

!!VR(eighthTown):S(NO_TOWN);

!!re (monInd:y)/0/17;
  !!SN:Mi^eighth_8thMonsList^/(monInd)/?(eighthMon:y);

  !!br&(eighthMon)=(mon);
!!en;

!!MA&(monInd)<=17:O(mon)/?(eighthTown);

!?FU(eighth_Get8thGrowth);
!#VA(townId:x) (totalGrowth:x) (castleBonus:x) (grailBonus:x) (legionPieceBonus:x) (statueBonus:x) (castleUpgBonus:x) (dwellBonus:x) (citadelBonus:x);

!!CA(CURRENT_TOWN)&(townId)=(CURRENT_TOWN):U?(townId);
!!CA0/(townId):T?(townType:y) O?(owner:y);

!!VRz2:S^^;                             [initialisation]
!!VRz3:S^^;
!!VR(castleBonus):S0;
!!VR(grailBonus):S0;
!!VR(legionPieceBonus):S0;
!!VR(statueBonus):S0;
!!VR(castleUpgBonus):S0;
!!VR(dwellBonus):S0;
!!VR(citadelBonus):S0;

!!CA0/(townId):B3/9;                    [check for Castle]

!!if&1;
  !!VR(castleShare:y):S2;
  !!UN:N2/2/(townType)/9;
!!el;
  !!CA0/(townId):B3/8;                  [check for Citadel if Castle is not built]

  !!if&1;
    !!VR(castleShare):S1;
    !!UN:N2/2/(townType)/8;
  !!el;
    !!VR(castleShare):S0;
  !!en;
!!en;

!!VRs^eighth_castleName^:Sz2;           [also get castle name for growth details dialog]

!!CA0/(townId):B3/26;                   [check for grail]

!!if&1;
  !!VR(grailBuilt:y):S(TRUE);
  !!UN:N2/3/(townType)/26;
!!el;
  !!VR(grailBuilt):S(FALSE);
!!en;

!!VRs^eighth_grailName^:Sz3;            [also get grail name for growth details dialog]

; Castle Upgrading
!!UN:P45/?(castleUpgrading:y);

!!if&(castleUpgrading);
  !!VR(ptrMonstersBonus:y):S(townId) *10 +9; [find place in the main array]
  !!SN:M45/(ptrMonstersBonus)/?(castleUpgBonus);
!!en;

; The following bonuses works only when there is a owner for the town
!!FU&(owner)=(NO_OWNER):E;

; Legion artifacts
!!VR(legionPieceQty:y):S0;
!!VR(statueOwned:y):S(FALSE);

; Pieces
; Get the level of eighth monster
!!FU(eighth_Get8thMonByTownType):P(townType)/(FALSE)/?(eighthMon:y);
!!MA:L(eighthMon)/?(level:y);

; Get the bonus of legion pieces of a town (including visiting and )
!!FU(tum_Town_GetStruct):P(townId)/?(townStruct:y);
!!SN:E6028544/(CALLCONV_THISCALL)/(townStruct)/(level);
!!VR(legionPieceBonus):Sv1;

!!if&(legionPieceBonus)>0;
  !!VR(legionArt:y):S(level) +117;
  !!SN:H^art^/(legionArt)/0/?s^eighth_legionPieceName^;
!!en;

; Statue
; Execute only when haven't found statue from the pieces check
!!if&(statueOwned)=(FALSE);
  !!OW:H(owner)/1;

  !!re i/2/v1/1/1;
    !!VR(hero:y):Svi;
    !!HE(hero):A2/(ART_STATUE_OF_LEGION)/?(has:y)/?(equipped:y);

    !!if&(equipped)>0;
      !!VR(statueOwned):S(TRUE);
      !!br;
    !!en;
  !!en;
!!en;

; Dwelling bonus
!!CA0/(townId):O?(owner:y);
!!FU(eighth_GetExt8thDwellQty):P(townType)/(owner)/?(dwellBonus);

; Calculate values
!!VR(totalGrowth):S0;
!!FU(eighth_Get8thBasicGrowth):P(townId)/?(basicGrowth:y);
!!VR(castleBonus)&(castleShare)>0:S(basicGrowth) *(castleShare) :2;
!!VR(totalGrowth):S(basicGrowth) +(castleBonus);
!!VR(statueBonus)&(statueOwned):S(totalGrowth) :2;
!!VR(totalGrowth):+(statueBonus) +(legionPieceBonus) +(dwellBonus);
!!VR(grailBonus)&(grailBuilt):S(totalGrowth) :2;
!!VR(totalGrowth):+(grailBonus) +(castleUpgBonus);

; Additional growth for Light Templars and Paladins in TUM Reborn if citadel is built
!!if&i^tum_reborn_on^/(townType)=(TOWN_CASTLE);
  !!CA0/(townId):B3/8;

  !!if&1;
    !!VR(citadelBonus):S1;
    !!VR(totalGrowth):+(citadelBonus);
  !!en;
!!en;

!?FU(eighth_Get8thBasicGrowth);
!#VA(townId:x) (basicGrowth:x);

!!CA0/(townId):T?(townType:y);
!!FU(eighth_Get8thMonByTownType):P(townType)/i^tum_upgGuild_%(townId)^/?(mon:y);
!!MA:G(mon)/?(basicGrowth);

!?FU(eighth_Get8thMonByTownType);
; Get creature ID for 8th dwellings
!#VA(townType:x) (isUpg:x) (mon:x) (nonUpgMon:x);

!!VR(nonUpgInd:y):S(townType) *2;
!!SN:Mi^eighth_8thMonsList^/(nonUpgInd)/?(nonUpgMon);

!!if&(isUpg);
  !!VR(upgInd:y):S(townType) *2 +1;
  !!SN:Mi^eighth_8thMonsList^/(upgInd)/?(mon);
!!el;
  !!VR(mon):S(nonUpgMon);
!!en;

!?FU(eighth_GetExt8thDwellQty);
!#VA(townType:x) (player:x) (dwell:x);

!!VR(dwell):S0;
!!VR(x:y):S-1;

!!re i;
  !!UN:U(OBJ_CREATURE_GENERATOR_1)/(ANY_OBJ)/-1/(x)/(y:y)/(z:y);
  !!br&(x)<0;

  !!DW(x)/(y)/(z):O?(owner:y);
  !!co&(owner)<>(player);

  !!DW(x)/(y)/(z):M0/?(mon:y)/?(qty:y);
  !!FU(eighth_Check8thMonTown):P(mon)/?(eighthTown:y);

  !!VR(dwell)&(townType)=(eighthTown):+1;
!!en;

****************************************************************************************************
; Manage AI behaviours
; Check AI towns and build 8th dwellings, recruit available 8th creatures
!?FU(OnEveryDay)&i^eighth_on^;
!!FU(eighth_Build8thDwell_AI)&i^timerOnce^/i^timerDay^>=2:P;
!!FU(eighth_Recruit8thMon_AI)&i^timerIsAi^/i^timerDay^>=i^eighth_build8thDwellInterval_AI^:P;

!?FU(eighth_Build8thDwell_AI);
; Execute the fucntion only at the right time
!!VRi^eighth_buildTimer^:+1;
!!FU&i^eighth_build8thDwellInterval_AI^<>i^eighth_buildTimer^:E;

!!VRi^eighth_buildTimer^:S0;
; Set up arrays for gold of AI players and towns with 8th dwelling
!!FU(NewIntArray):P?(goldArray:y);

!!re i/(PLAYER_FIRST)/(PLAYER_LAST);
  !!OW:Ri/(RES_GOLD)/?(gold:y);
  !!FU(Array_Push):P(goldArray)/(gold);
!!en;

!!FU(Array_Fill):Pi^eighth_townsWith8thDwellAi^/0/0;

; Loop through all towns, check and build 8th dwelling if 8th is not built & requirements met
!!VR(x:y):S-1;

!!re i;
  !!UN:U(OBJ_TOWN)/(ANY_OBJ)/-1/(x)/(y:y)/(z:y);
  !!br&(x)<0;

  !!CA(x)/(y)/(z):U?(townId:y) T?(townType:y) O?(owner:y);

  !!OW:I(owner)/?(isAi:y);
  !!co|(owner)=(NO_OWNER)/(isAi)=(FALSE);

  ; if 8th dwelling is not built
  !!if&i^eighth_8thDwell_%(townId)^=(FALSE);

    ; Check gold
    !!SN:Mi^eighth_dwellCostsList_%(townType)^/(RES_GOLD)/?(cost:y);
    !!SN:M(goldArray)/(owner)/?(gold);
    !!co&(gold)<(cost);

    ; Check pre-required buildings
    !!CA0/(townId):B3/7;                [fort]

    !!if&1;
      !!SN:Mi^eighth_dwellReqDwellsList^/(townType)/?(reqDwell:y);
      !!CA0/(townId):B3/(reqDwell);
    !!en;

    !!co&-1;

    ; Build 8th dwelling and set up initial available creatures, does not set the town as built for making AIs' lives easier
    !!VRi^eighth_8thDwell_%(townId)^:S(TRUE);

    !!FU(eighth_TransferPortalOfSummoningToArray):P(townId);

    !!FU(eighth_Get8thMonByTownType):P(townType)/i^tum_upgGuild_%(townId)^/?(mon:y);
    !!FU(eighth_Get8thBasicGrowth):P(townId)/?(basicGrowth:y);
    !!FU(eighth_SetOrGet8thMonByTownId):P(townId)/(mon)/(basicGrowth); [set]

    !!VR(goldNew:y):S(gold) -(cost);
    !!OW:R(owner)/(RES_GOLD)/(goldNew);
  !!en;

  ; add 1 to the global var if the current town has 8th dwelling and belongs to the current player
  !!SN&i^eighth_8thDwell_%(townId)^:Mi^eighth_townsWith8thDwellAi^/(owner)/d1;
!!en;

!?FU(eighth_Recruit8thMon_AI);
!!OW:C?(player:y);

; Set up budge for buying 8th creatures of each town
!!SN:Mi^eighth_townsWith8thDwellAi^/(player)/?(townsWith8th:y);
!!FU&(townsWith8th)=0:E;

!!OW:R(player)/(RES_GOLD)/?(gold:y);
!!VR(budget:y):S(gold) :(townsWith8th) :100 *i^eighth_recruit8thMaxGoldPct_AI^;

; Search for towns of current AI
!!VR(x:y):S-1;

!!re i;
  !!UN:U(OBJ_TOWN)/(ANY_OBJ)/-1/(x)/(y:y)/(z:y);
  !!br&(x)<0;

  !!CA(x)/(y)/(z):U?(townId:y) T?(townType:y) O?(owner:y);
  !!co|(owner)<>(player)/i^eighth_8thDwell_%(townId)^=(FALSE); [next town if not owned by current player/8th dwelling still not built]

  ; recruit 8th creatures
  ; Check if there is an available slot
  !!FU(eighth_FindAvailSlot_AI):P(townId)/?(townSlot:y)/?(visitHero:y)/?(heroSlot:y);
  !!co&(townSlot)=-1/(heroSlot)=-1;     [next town if both town and visiting hero has no slot]

  ; Check how many 8th creatures AI can afford
  !!FU(eighth_SetOrGet8thMonByTownId):P(townId)/?(mon:y)/?(qtyAvail:y); [get]
  !!co|(mon)<=(NO_MON)/(qtyAvail)<=0;

  !!MA:C(mon)/(RES_GOLD)/?(unitPrice:y);
  !!VR(qtyAfford:y):S(budget) :(unitPrice);
  !!VR(qtyAfford)&(qtyAfford)>(qtyAvail):S(qtyAvail); [fix the quantity if there aren't that many left]
  !!co&(qtyAfford)<=0;

  ; Buy 8th creatures for AI
  !!if&(townSlot)<>-1;                  [higher priority on town slots]
    !!CA0/(townId):M2/(townSlot)/(mon)/(qtyAfford);
  !!el&(heroSlot)<>-1;
    !!HE(visitHero):C2/(mon)/(qtyAfford)/0; [add creature to AI - ignoring the actual 1st avail slot]
  !!en;

  !!VR(totalCost:y):S(unitPrice) *(qtyAfford);
  !!VR(goldNew:y):S(gold) -(totalCost);
  !!OW:R(player)/(RES_GOLD)/(goldNew);
  !!FU(eighth_SetOrGet8thMonByTownId):P(townId)/(mon)/d-(qtyAfford); [set]
!!en;

!?FU(eighth_FindAvailSlot_AI);
!#VA(townId:x) (townSlot:x) (visitHero:x) (heroSlot:x);

!!CA0/(townId):T?(townType:y);
!!FU(eighth_Get8thMonByTownType):P(townType)/i^eighth_8thMon_%(townId)^/?(eighthMon:y);

!!VR(townSlot):S-1;
!!VR(heroSlot):S-1;

; Check for defending creatures
!!re i/(ARMY_SLOT_FIRST)/(ARMY_SLOT_LAST);
  !!CA0/(townId):M2/i/?(mon:y)/?(qty:y);

  !!br|(mon)=(eighthMon)/(mon)<=(NO_MON);
!!en;

!!if&i<=(ARMY_SLOT_LAST);
  !!VR(townSlot):Si;
  !!FU:E;
!!en;

; Check for visiting hero if no slot in town
!!CA0/(townId):H1/?(visitHero);
!!FU&(visitHero)<=(NO_HERO):E;

!!CA0/(townId):O?(townOwner:y);
!!HE(visitHero):O?(heroOwner:y);
!!FU&(townOwner)<>(heroOwner):E;

!!re i/(ARMY_SLOT_FIRST)/(ARMY_SLOT_LAST);
  !!HE(visitHero):C0/i/?(mon)/?(qty);

  !!br|(mon)=(eighthMon)/(mon)<=(NO_MON);
!!en;  

!!VR(heroSlot)&i<=(ARMY_SLOT_LAST):Si;

!?FU(eighth_TransferPortalOfSummoningToArray);
!#VA(townId:x);

; Transfer the current Portal of Summoning monsters to the array so we can use them the fake way
!!FU(eighth_SetOrGet8thMonByTownId):P(townId)/?(currMon:y)/?(currNum:y); [get]
!!VR(index:y):S(townId) *2;
!!SN:Mi^eighth_portalOfSummoningList^/(index)/(currMon);
!!VR(index):+1;
!!SN:Mi^eighth_portalOfSummoningList^/(index)/(currNum);

****************************************************************************************************
; Update 8th dwelling variables and displays
; Warning: this trigger should be enabled without i^eighth_on^ as we want the 8th monster dialogue to display corrected creature picture
!?FU(tum_OnPrepareTownScreen);
!#VA(townId:x);

!!FU(eighth_SetUpVarsAndUpdate8thDwell):P(townId);

!?FU(OnAfterBuildTownBuilding)&i^tum_onTownScreen^/i^eighth_on^;
!#VA(townId:x) (buildingId:x);

; If fort is demolished, the building id is 11 (instead of 7)
; Also we need to update the 8th creature when 22 building (Portal of Summoning for Dungeon) is built
!!FU(eighth_SetUpVarsAndUpdate8thDwell)|(buildingId)=11:P(townId)/(buildingId);
!!SN:D;

!?FU(eighth_SetUpVarsAndUpdate8thDwell);
!#VA(townId:x);
!#VA(buildingId:x);                     [OPT. Building Id built or demolished]

!!FU:A?(numArgs:y);
!!VR(buildingId)&(numArgs)<2:S0;

!!CA0/(townId):T?(townType:y);
!!FU(eighth_Get8thMonByTownType):P(townType)/(TRUE)/?(upgMon:y)/?(nonUpgMon:y);

; For cosmetic purpose - this must be executed even when i^eighth_on^ is not TRUE
!!if&i^tum_upgGuild_%(townId)^;
  !!VRi^eighth_8thMon^:S(upgMon);
!!el;
  !!VRi^eighth_8thMon^:S(nonUpgMon);
!!en;

!!FU&i^eighth_on^<>(TRUE):E;

; Update 8th dwelling

; Demolish 8th dwellings if fort is demolished
!!if&(buildingId)=11;
  !!CA0/(townId):B3/7;

  !!if&-1;
    !!VRi^eighth_8thDwell_%(townId)^:S(FALSE);
    !!FU(eighth_SetOrGet8thMonByTownId):P(townId)/(NO_MON)/-1;
  !!en;
; Update 8th dwell, if it is entering town screen or build up Portal of Summoning
!!el;
  !!VR(mustUpdate:y):S(FALSE);
  !!VR(mustUpdate)&(buildingId)=0:S(TRUE);
  !!VR(mustUpdate)&(buildingId)=22/(townType)=(TOWN_DUNGEON):S(TRUE);
  !!FU(eighth_Update8thDwell)&(mustUpdate):P(townId);
!!en;

!!SN:H^monname^/i^eighth_8thMon^/1/?s^eighth_8thMonName^;

!?FU(eighth_Update8thDwell);
!#VA(townId:x);

!!CA0/(townId):T?(townType:y);
!!FU(eighth_Get8thMonByTownType):P(townType)/(TRUE)/?(upgMon:y)/?(nonUpgMon:y);

!!if&i^eighth_8thDwell_%(townId)^;
  !!if&i^tum_upgGuild_%(townId)^;
    !!FU(eighth_SetOrGet8thMonByTownId):P(townId)/(upgMon)/d;
  !!el;
    !!FU(eighth_SetOrGet8thMonByTownId):P(townId)/(nonUpgMon)/d;
  !!en;
!!en;

****************************************************************************************************
; Triggers once for each town
!?FU(eighth_OnKODlgSmallPortraitsBuild);
!#VA(hook:x);

!!SN:X?t/0;                             [skip town type and builded id 22 checks]
!!UN:C(hook)/(STRUCT_HOOK_CONTEXT_RET)/4/5362395;
!!UN:C(hook)/(STRUCT_HOOK_CONTEXT_ESI)/4/?(town:y) C(town)/1/?(townId:y);
*!FU|(townId)<0/(townId)>47:E;          [For some reason, there could be invalid town ID return (while the town doesn't exist), why?]

!!FU(eighth_Get8thGrowth):P(townId)/?(totalGrowth:y);                [Total growth of everything added]
!!SN:E6388190/(CALLCONV_CDECL)/6911016/6821904/(totalGrowth:y);      [sprintf for making ^+%d^ as growth] 6179DE 697428 681810
!!UN:C5362651/1/4/6911016;                                           [place text buffer for all "summoned" creature]

****************************************************************************************************
; Fix town screen small icon display
!?FU(eighth_OnTownDlgSmallPortraitsRedraw);
!#VA(hook:x);

!!CA(CURRENT_TOWN):U?(townId:y);
!!FU&i^eighth_8thDwell_%(townId)^<>(TRUE):E;

!!UN:C(hook)/(STRUCT_HOOK_CONTEXT_ESI)/4/?(esi:y) C(esi)/280/4/?(townDlg:y);
!!FU(eighth_Get8thMonItem):P?(itemId:y);
!!VR(textItemId:y):S(itemId) +8;
!!FU(eighth_SetOrGet8thMonByTownId):P(townId)/?(mon:y)/?(qty:y);

!!VR(monCadre:y):S(mon) +2;

!!FU(H3Dlg_SendCmdToItem):P(townDlg:y)/(itemId:y)/5/4 P(townDlg:y)/(itemId:y)/(DLG_CMD_SET_DEF_FRAME)/(monCadre:y);
!!FU(H3Dlg_SendCmdToItem):P(townDlg:y)/(textItemId:y)/5/4 P(townDlg:y)/(textItemId:y)/(DLG_CMD_SET_TEXT)/^%(qty)^;

****************************************************************************************************
; Fix Fort screen
!?FU(OnTownMouseClick)&i^mouse_item^>=7/i^mouse_item^<=9/i^mouse_action^=(MOUSE_LMB_PRESSED);
; Set up dwelling frame - Must be here otherwise it's too late
!!CA(CURRENT_TOWN):U?(townId:y) T?(townType:y);

!!if&(townType)=(TOWN_DUNGEON)/i^eighth_8thDwell_%(townId)^=(FALSE);
  !!UN:C6135068/1/22;
  !!FU:E;
!!en;

!!if&i^tum_upgGuild_%(townId)^;
  !!UN:C6135068/1/45;
!!el;
  !!UN:C6135068/1/44;
!!en;

!?FU(eighth_OnFortDlgSummonCreatureBuild);
!#VA(hook:x);

!!CA(CURRENT_TOWN):U?(townId:y);
!!FU&i^eighth_8thDwell_%(townId)^<>(TRUE):E;

; Set up growth text
!!UN:C(hook)/(STRUCT_HOOK_CONTEXT_EBX)/4/?(townDlg:y);
!!FU(eighth_Get8thGrowth):P(CURRENT_TOWN)/?(totalGrowth:y);
!!FU(H3Dlg_SendCmdToItem):P(townDlg:y)/136/(DLG_CMD_SET_TEXT)/^%(totalGrowth)^;

; Set up dwelling name
!!CA0/(townId):T?(townType:y);

!!if&i^tum_upgGuild_%(townId)^;
  !!VR(index:y):S770009 +(townType);
!!el;
  !!VR(index):S770000 +(townType);
!!en;

!!FU(H3Dlg_SendCmdToItem):P(townDlg:y)/16/(DLG_CMD_SET_TEXT)/z(index);

****************************************************************************************************

!?FU(OnTownMouseClick)&i^mouse_action^=(MOUSE_LMB_RELEASED)/i^eighth_on^;
!!SN:F^GetButtonID^/^8thCreatures^;
!!FU&i^mouse_item^<>v1:E;

!!CM:R0;
!!FU(eighth_BuildOrRecruit8th):P;

; Here we use a function so that it can be called by both mouse and keyboard
!?FU(eighth_BuildOrRecruit8th);
!!CA(CURRENT_TOWN):U?(townId:y) T?(townType:y) O?(owner:y);

!!OW:C?(currPlayer:y)/?(clickedPlayer:y);
!!FU&(owner)<>(clickedPlayer):E;

!!if&i^eighth_8thDwell_%(townId)^=(FALSE);
  !!FU(eighth_Build8thDwellDialogue):P(townId)/(townType)/(owner)/(FALSE); [left-clicking]
!!el;
  !!FU(eighth_SetOrGet8thMonByTownId):P(CURRENT_TOWN)/?(mon:y)/?(qty:y); [get]

  !!FU(eighth_ShowRecruitDialog)&(mon)>(NO_MON):P;
!!en;

!?FU(eighth_Build8thDwellDialogue);
; build 8th dwelling
!#VA(townId:x) (townType:x) (owner:x) (rightClick:x);

; Ensure the 8th dwelling monster variables are updated
!!FU(eighth_SetUpVarsAndUpdate8thDwell):P(townId);

; get dwellDesc base string
!!VR(dwell:y):S(TRUE);
!!VR(fort:y):S(TRUE);

!!SN:Mi^eighth_dwellReqDwellsList^/(townType)/?(reqDwell:y);
!!CA(CURRENT_TOWN):B3/(reqDwell);
!!VR(dwell)&-1:S(FALSE);

!!CA(CURRENT_TOWN):B3/7;                [fort]
!!VR(fort:y)&-1:S(FALSE);

!!VR(mon:y):Si^eighth_8thMon^;
!!VR(monName:z):Ss^eighth_8thMonName^;

!!if&i^tum_upgGuild_%(townId)^;
  !!VR(ertInd:y):S(townType) +770009;
!!el;
  !!VR(ertInd):S(townType) +770000;
!!en;

!!VR(dwellName:z):Sz(ertInd);

!!FU(eighth_GetReqBuildNames):P(townType);

!!SN:T^eighth.dwellDesc^/?(dwellDesc:z)/^dwellName^/(dwellName:z)/^monName^/(monName:z); [dwellDesc]

; get building requirement string
!!SN:T^eighth.comma^/?(comma:z);
!!VR(newLine:z):S^
^;
!!VR(buildReqMet:y):S(FALSE);
!!VR(buildReq:z):S^^;

!!if&(dwell)=(FALSE)/(fort)=(FALSE);
 !!VR(buildReq):Ss^eighth_fortReq^ +(comma) +s^eighth_dwellReq^;
!!el&(dwell)=(TRUE)/(fort)=(FALSE);
  !!VR(buildReq):Ss^eighth_fortReq^;
!!el&(dwell)=(FALSE)/(fort)=(TRUE);
  !!VR(buildReq):Ss^eighth_dwellReq^;
!!el&(dwell)=(TRUE)/(dwell)=(TRUE);
  !!SN:T^eighth.reqMet^/?(buildReq);    [buildReq]
  !!VR(buildReqMet):S(TRUE);
!!en;

!!VR(buildReq):+(newLine) +(newLine) +(newLine);

; get resources requirement string
!#VA(costs[7]:y);

!!re i/(RES_FIRST)/(RES_LAST_SOD);
  !!SN:Mi^eighth_dwellCostsList_%(townType)^/i/?(costs[i]);
!!en;

!!VR(resReqMet:y):S(TRUE);
!!OW:R(CURRENT_PLAYER)/(RES_WOOD)/?(wood:y) R(CURRENT_PLAYER)/(RES_MERCURY)/?(mercury:y) R(CURRENT_PLAYER)/(RES_ORE)/?(ore:y) R(CURRENT_PLAYER)/(RES_SULFUR)/?(sulfur:y);
!!OW:R(CURRENT_PLAYER)/(RES_CRYSTAL)/?(crystal:y) R(CURRENT_PLAYER)/(RES_GEMS)/?(gems:y) R(CURRENT_PLAYER)/(RES_GOLD)/?(gold:y); [get resources]
!!VR(resReqMet)|(wood)<(costs[0])/(mercury)<(costs[1])/(ore)<(costs[2])/(sulfur)<(costs[3])/(crystal)<(costs[4])/(gems)<(costs[5])/(gold)<(costs[6]):S(FALSE);

!!VR(resReq:z):S^^;
!!VR(counter:y):S0;

!!re i/(RES_FIRST)/(RES_LAST_SOD);
  !!if&(costs[i])>0;
    !!VR(resReq):+^{~>RESOURCE.def:%i} %(costs[i])      ^;
    !!VR(counter):+1;

    !!if&(counter)=5;
      !!VR(resReq):+(newLine) +(newLine);
    !!en;
  !!en;
!!en;

!!FU(Substr):P^%(resReq)^/0/-6/?(resReq);[remove the last 8 characters]
!!VR(resReq):+(newLine) +(newLine) +(newLine); [resReq]

; Set up all strings and summarise conditions
!!FU(eighth_GetBuild8thDwellStatus):P(buildReqMet)/(resReqMet)/?(allReqMet:y);

!!if&(allReqMet)/(rightClick);
  !!VR(build8thDialog:z)S(dwellDesc) +(buildReq) +(resReq);
  !!FU(Substr):P^%(build8thDialog)^/0/-3/?(build8thDialog);[remove the last 3 characters (newlines)]
!!el;
  !!VR(build8thDialog)S(dwellDesc) +(buildReq) +(resReq) +s^eighth_buildStatus^;
!!en;

!!if&(rightClick);
  !!IF:Q1/(PIC_TYPE_MONSTER)/(mon)/4^%(build8thDialog)^; [dialgoue - right-click style]
!!el&(allReqMet)/(rightClick)=(FALSE);
  !!IF:Q1/(PIC_TYPE_MONSTER)/(mon)/2^%(build8thDialog)^; [dialogue - ask]

  !!if&1;                               [if build]
    !!VR(woodNew:y):S(wood) -(costs[0]);
    !!VR(mercuryNew:y):S(mercury) -(costs[1]);
    !!VR(oreNew:y):S(ore) -(costs[2]);
    !!VR(sulfurNew:y):S(sulfur) -(costs[3]);
    !!VR(crystalNew:y):S(crystal) -(costs[4]);
    !!VR(gemsNew:y):S(gems) -(costs[5]);
    !!VR(goldNew:y):S(gold) -(costs[6]);

    !!OW:R(CURRENT_PLAYER)/(RES_WOOD)/(woodNew);
    !!OW:R(CURRENT_PLAYER)/(RES_MERCURY)/(mercuryNew);
    !!OW:R(CURRENT_PLAYER)/(RES_ORE)/(oreNew);
    !!OW:R(CURRENT_PLAYER)/(RES_SULFUR)/(sulfurNew);
    !!OW:R(CURRENT_PLAYER)/(RES_CRYSTAL)/(crystalNew);
    !!OW:R(CURRENT_PLAYER)/(RES_GEMS)/(gemsNew);
    !!OW:R(CURRENT_PLAYER)/(RES_GOLD)/(goldNew);

    !!FU(eighth_Build8thDwell):P(townId)/(townType);
  !!en;
!!el&(allReqMet)=(FALSE)/(rightClick)=(FALSE);
  !!IF:Q1/(PIC_TYPE_MONSTER)/(mon)/1^%(build8thDialog)^; [dialgoue - display only]
!!en;

!?FU(eighth_Build8thDwell);
!#VA(townId:x) (townType:x);

!!VRi^eighth_8thDwell_%(townId)^:S(TRUE);

!!FU(eighth_TransferPortalOfSummoningToArray):P(townId);

; Set the town as built
; Here we use the function from Third Upgrade Mod
!!FU(tum_SetTownBuildingStatus):P(townId);

!!FU(eighth_Get8thBasicGrowth):P(townId)/?(basicGrowth:y);
!!FU(eighth_SetOrGet8thMonByTownId):P(CURRENT_TOWN)/i^eighth_8thMon^/(basicGrowth); [set]

!!UN:R4/(CURRENT_TOWN);
!!SN:P^BUILDTWN.wav^;

; Update portal of summoning


!?FU(eighth_GetReqBuildNames);
!#VA(townType:x);

!!SN:Mi^eighth_dwellReqDwellsList^/(townType)/?(dwell:y);
!!UN:N2/2/(townType)/(dwell);
!!VRs^eighth_dwellReq^:Sz2;

!!UN:N2/3/(townType)/7;                 [fort]
!!VRs^eighth_fortReq^:Sz3;

!?FU(eighth_GetBuild8thDwellStatus);
!#VA(buildReqMet:x) (resReqMet:x) (allReqMet:x);

!!VR(allReqMet):S(FALSE);
!!CA(CURRENT_TOWN):R?(builtThisTurn:y);

!!if&(builtThisTurn);
  !!SN:T^eighth.built^/?s^eighth_buildStatus^;
!!el;
  !!SN&(buildReqMet)=(FALSE):T^eighth.missBuild^/?s^eighth_buildStatus^;

  !!if&(buildReqMet)/(resReqMet)=(FALSE);
    !!SN:T^eighth.missRes^/?s^eighth_buildStatus^;
  !!el&(buildReqMet)/(resReqMet);
    !!SN:T^eighth.dwellAsk^/?s^eighth_buildStatus^;
    !!VR(allReqMet):S(TRUE);
  !!en;
!!en;

!?FU(eighth_ShowRecruitDialog);         [Hawaiing]
; Call the dialogue of Portal of Summoning
; 005D2D73 - 75 05 - jne 005d2d7a
; 005D2E10 - 8b 0d 64 5e 6a 00  - mov ecx,[006a5e64]
!!UN:C(TOWN_MANAGER)/4/?(townMgr:y);
!!SN:E6106448/2/(townMgr);

; Update the screen after closing dialog (in case something's recruited)
!!SN:D;

!?FU(eighth_SetOrGet8thMonByTownId);    [Hawaiing]
; Set or get 8th creature type/available quantity
!#VA(townId:x) (mon:x) (qty:x);

; Check if it is Set, Get or Add
!!FU:S(@qty)/?(argSyntax:y);

!!CA(CURRENT_TOWN)&(townId)=(CURRENT_TOWN):U?(townId);

!!UN:C(GAME_MANAGER)/(UNC_INT)/?(gameMgr:y);[<699538>Main_Structure]
!!UN:C(gameMgr)/136724/(UNC_INT)/?(portalPtr:y);
!!VR(typePtr:y):S(townId) *360 +(portalPtr) +60;
!!VR(numPtr:y):S(typePtr) +4;

; If the syntax is "Get"
!!if&(argSyntax)=(ARG_SYNTAX_GET);
  !!UN:C(typePtr)/4/?(mon) C(numPtr)/2/?(qty);
; If the syntax is "Set" or "Add"
!!el;
  ; Set the type of monster no matter it's set or add
  !!if&(mon)>0;                         [0 is the value to decide whether it was "Add" syntax]
    !!VR(mon):F(NO_MON)/(INT_MAX);
    !!UN:C(typePtr)/4/(mon);
  !!en;

  ; Depends on syntax, set or add
  !!if&(argSyntax)=(ARG_SYNTAX_SET);
    !!VR(qty):F-1/32000;
    !!UN:C(numPtr)/2/(qty);
  !!el&(argSyntax)=(ARG_SYNTAX_ADD);
    !!UN:C(numPtr)/2/?(currQty:y);
    !!VR(currQty):+(qty) F-1/32000;
    !!UN:C(numPtr)/2/(currQty);
  !!en;
!!en;

!?FU(OnTownFortMouseClick)&i^eighth_on^;
; Disable mouse clicks on 8th creatures in allied forst
!!CM:I?(item:y);
!!FU&(item)<>24:E;

!!CA(CURRENT_TOWN):O?(owner:y);
!!OW:C?(currPlayer:y)/?(clickedPlayer:y);
!!CM&(owner)<>(clickedPlayer):R0;

****************************************************************************************************
; Key press event
!?FU(OnKeyPressed_Town)&i^key^=i^eighth_8thHotkey^/i^eighth_on^;
!#VA(key:x) (preventDefault:x) (isDown:x);

!!VR(preventDefault):S(TRUE);

!!FU(eighth_BuildOrRecruit8th):P;

****************************************************************************************************
; Right-click events
!?FU(OnTownMouseClick)&i^mouse_action^=(MOUSE_RMB_PRESSED)/i^eighth_on^;
!!CM:I?(item:y);
!!FU(eighth_Get8thMonItem):P?(eighthItem:y);
!!FU|(item)<>(eighthItem):E;

!!CM:R0;
!!CA(CURRENT_TOWN):U?(townId:y) O?(owner:y);
!!FU|i^eighth_8thDwell_%(townId)^=(FALSE)/i^eighth_8thMon^<=(NO_MON):E;

!!OW:C?(currPlayer:y)/?(clickedPlayer:y);

!!if&(owner)=(clickedPlayer);
  !!FU(eighth_ShowRecruitDialog):P;
!!el;
  !!FU(eighth_ShowGrowthDetails):P;
!!en;

!?FU(eighth_Get8thMonItem);
!#VA(eighthItem:x);

; Calculate how many creatures are available
!!VR(dwellQty:y):S0;

!!re (dwellId:y)/30/36;
  !!CA(CURRENT_TOWN):B3/(dwellId);
  !!VR(dwellQty)&1:+1;
!!en;

!!VR(eighthItem):S(dwellQty) +164;

!?FU(OnTownMouseClick)&i^mouse_action^=(MOUSE_RMB_PRESSED)/i^eighth_on^;
; Right-click info of 8th creature button
!!SN:F^GetButtonID^/^8thCreatures^;
!!FU&i^mouse_item^<>v1:E;

!!CM:R0;
!!CA(CURRENT_TOWN):U?(townId:y) T?(townType:y) O?(owner:y);

; Ask to built 8th dwelling if not built
!!if|i^eighth_8thDwell_%(townId)^=(FALSE)/i^eighth_8thMon^<=(NO_MON);
  !!FU(eighth_Build8thDwellDialogue):P(townId)/(townType)/(owner)/(TRUE);
; Show growth info if built
!!el;
  !!FU(eighth_ShowGrowthDetails):P;
!!en;

!?FU(eighth_ShowGrowthDetails);
!!CA(CURRENT_TOWN):T?(townType:y) U?(townId:y) O?(owner:y);

!!FU(eighth_Get8thBasicGrowth):P(townId)/?(basicGrowth:y);
!!FU(eighth_Get8thGrowth):P(townId)/?(totalGrowth:y)/?(castleBonus:y)/?(grailBonus:y)
  /?(legionPieceBonus:y)/?(statueBonus:y)/?(castleUpgBonus:y)/?(dwellBonus:y)/?(citadelBonus:y);

!!VR(newLine:z):S^
^;
!!SN:T^eighth.growthDetails^/?(growthDetails:z)/^monName^/s^eighth_8thMonName^/^totalGrowth^/(totalGrowth);

; Do not change the sequence here unless you know what you are doing!
!!if&(totalGrowth)>(basicGrowth);
  !!SN:T^eighth.growthBasic^/?(growthBasic:z)/^basicGrowth^/(basicGrowth);
  !!VR(growthDetails):+(newLine) +(growthBasic);

  !!if&(castleBonus)>0;
    !!VR(growthDetails):+(newLine) +^%s(eighth_castleName) +%(castleBonus)^;
  !!en;

  !!if&(statueBonus)>0;
    !!SN:H^art^/(ART_STATUE_OF_LEGION)/0/?(statueName:z);
    !!VR(growthDetails):+(newLine) +^%(statueName) +%(statueBonus)^;
  !!en;

  !!VR(growthDetails)&(legionPieceBonus)>0:+(newLine) +^%s(eighth_legionPieceName) +%(legionPieceBonus)^;

  !!if&(dwellBonus)>0;
    !!SN:T^eighth.growthExtDwell^/?(growthExtDwell:z)/^extDwellBonus^/(dwellBonus);
    !!VR(growthDetails):+(newLine) +(growthExtDwell);
  !!en;

  !!if&(grailBonus)>0;
    !!VR(growthDetails):+(newLine) +^%s(eighth_grailName) +%(grailBonus)^;
  !!en;

  !!if&(castleUpgBonus)>0;
    !!SN:T^wog.45.hintRMC^/?(growthCastleUpg:z)/^number^/(castleUpgBonus);
    !!VR(growthDetails):+^%(growthCastleUpg)^;
  !!en;

  ; For Castle only
  !!if&(citadelBonus)>0;
    !!SN:T^tumr.str.castleCitadel^/?(growthCitadel:z)/^number^/(citadelBonus);
    !!VR(growthDetails):+^%(growthCitadel)^;
  !!en;
!!en;

!!IF:Q1/(PIC_TYPE_MONSTER)/i^eighth_8thMon^/(MSG_TYPE_POPUP)/^%(growthDetails)^;

****************************************************************************************************
; Mouse hint events
!?FU(OnTownMouseHint)&i^eighth_on^;
!!FU(eighth_Get8thMonItem):P?(eighthItem:y);
!!SN:F^GetButtonID^/^8thCreatures^;

!!if&i^mouse_item^=(eighthItem);
  !!FU(eighth_Show8thHint):P0;
!!el&i^mouse_item^=v1;
  !!FU(eighth_Show8thHint):P1;
!!en;

!?FU(eighth_Show8thHint);
!#VA(mode:x);                           [mode 0 - eighth item, mode 1 - eighth button]

!!CA(CURRENT_TOWN):U?(townId:y) T?(townType:y) O?(owner:y);

; Empty hint if 8th dwelling is not build
!!if|i^eighth_8thDwell_%(townId)^=(FALSE)/i^eighth_8thMon^<=(NO_MON);
  !!if&(mode)=0;
    !!VR(hint:z):S^^;
  !!el;
    !!if&i^tum_upgGuild_%(townId)^;
      !!VR(ertInd:y):S(townType) +770009;
    !!el;
      !!VR(ertInd):S(townType) +770000;
    !!en;

    !!SN:T^eighth.hintBuild^/?(hint:z)/^buildName^/z(ertInd);
  !!en;
!!el;
  !!FU(eighth_Get8thGrowth):P(townId)/?(totalGrowth:y);
  !!SN:T^eighth.hintRecruit^/?(hint)/^monName^/s^eighth_8thMonName^/^totalGrowth^/(totalGrowth);
!!en;

; Show hint
!!FU(H3Dlg_GetCurrentDlg):P?(rootDlg:y);

!!FU(H3Dlg_SendCmdToItem):P(rootDlg)/7001/(DLG_CMD_SET_TEXT)/^{~text align=center}%(hint)}^/(DLG_CMD_TYPE_DEFAULT);

!!SN:D;

!!FU(H3Dlg_SendCmdToItem):P(rootDlg)/7001/(DLG_CMD_SET_TEXT)/^^/(DLG_CMD_TYPE_DEFAULT);

****************************************************************************************************
; Manage 8th button according to WoG option
!?FU(OnTownMouseClick)&i^eighth_on^=(FALSE);
; Show left click and right click info when 8th upgrade option is disabled
!!SN:F^GetButtonID^/^8thCreatures^;
!!FU&i^mouse_item^<>v1:E;

!!CM:R0;
!!CA(CURRENT_TOWN):U?(townId:y) T?(townType:y);

!!if&i^tum_upgGuild_%(townId)^;
  !!VR(ertInd:y):S(townType) +770009;
!!el;
  !!VR(ertInd):S(townType) +770000;
!!en;

!!VR(dwellName:z):S^{%z(ertInd)}^;
!!VR(newLine:z):S^
^;
!!SN:T^eighth.disabled^/?(disabled:z);
!!VR(info:z):S(dwellName) +(newLine) +(newLine) +(disabled);

!!if&i^mouse_action^=(MOUSE_LMB_RELEASED);
  !!IF:Q1/(PIC_TYPE_MONSTER)/i^eighth_8thMon^/(MSG_TYPE_MES)/^%(info)^;
!!el&i^mouse_action^=(MOUSE_RMB_PRESSED);
  !!IF:Q1/(PIC_TYPE_MONSTER)/i^eighth_8thMon^/(MSG_TYPE_POPUP)/^%(info)^;
!!en;

; The following functions are called from other scripts
!?FU(eighth_Get8thBtnPos);
!#VA(item:x) (x:x) (y:x);

!!if|(item)=164/(item)=168;
  !!VR(x):S(EIGHTH_BTN_DEFAULT_X_COORD) -55 -55 -55;
!!el|(item)=165/(item)=169;
  !!VR(x):S(EIGHTH_BTN_DEFAULT_X_COORD) -55 -55;
!!el|(item)=166/(item)=170;
  !!VR(x):S(EIGHTH_BTN_DEFAULT_X_COORD) -55;
!!el|(item)=167/(item)=171;
  !!VR(x):S(EIGHTH_BTN_DEFAULT_X_COORD);
!!en;

!!if&(item)>=164/(item)<=167;
  !!VR(y):S(EIGHTH_BTN_DEFAULT_Y_COORD) -48;
!!el&(item)>=168/(item)<=171;
  !!VR(y):S(EIGHTH_BTN_DEFAULT_Y_COORD);
!!en;

!?FU(eighth_SetUp8thBtn);
!#VA(x:x) (y:x) (refresh:x);

!!SN:F^GetButtonID^/^8thCreatures^;
!!VR(btnId:y):Sv1;
!!UN:C6919500/4/?(value:y);
!!UN:C(value)/280/4/?(value2:y);
!!SN:E6288384/2/(value2)/512/52/(btnId)/(x);
!!SN:E6288384/2/(value2)/512/53/(btnId)/(y);

!!UN&(refresh):R4/(CURRENT_TOWN);

****************************************************************************************************
; Upgrade 8th creatures
; This script is disabled as the upgrade feature has been included in FU(tum_GetUpgMonInTown) (works for both creature dialog and A+clicking)
!?FU(OnDetermineMonInfoDlgUpgrade)&i^eighth_on^;
!!FU&i^Typhon_Third_Upgrade_Mod_Active^:E;

!#VA(monType:x) (upgType:x) (town:x) (hero:x);

; Exit if not from town screen
!!FU&(town)<=(NO_TOWN):E;

!!MA:O(monType)/?(ownerTown:y);

; Exit if town type doens't match - unless Universal upgrade is enabled
!!UN:P174/?(universalUpgrade:y);

!!if&(universalUpgrade)<>(TRUE);
  !!CA0/(town):T?(townType:y);
  !!FU&(ownerTown)<>(townType):E;
!!en;

; If the monster is a non-upgraded eighth monster, get its upgrade if the upgraded 8th dwelling is built
!!if&i^tum_upgGuild_%(town)^/i^eighth_8thDwell_%(town)^;
  !!FU(eighth_Get8thMonByTownType):P(ownerTown)/(TRUE)/?(upgMon:y)/?(nonUpgMon:y);
  !!VR(upgType)&(monType)=(nonUpgMon):S(upgMon);
!!en;

****************************************************************************************************
; Set up multiple slots recruit dialog
!?FU(OnOpenRecruitDlg);
!#VA(slot:x) (flags:x) (dlgEnabled:x);

; Set up global to determine whether it's required to sync slot #0/#1 quantity
!!VRi^eighth_isEighthRecruitDlg^:S(FALSE);

; Exit if not from town screen nor fort screen
!!SN:F^GetGameState^/?(mainDialogs[2]:y);
!!FU&(mainDialogs[1])<>(DLG_TOWN_SCREEN)/(mainDialogs[1])<>6147920:E; [6147920 - DLG_FORT_SCREEN]

; Exit if either upgrade building or 8th dwelling hasn't been built
!!CA(CURRENT_TOWN):U?(townId:y);
!!FU|i^tum_upgGuild_%(townId)^<>(TRUE)/i^eighth_8thDwell_%(townId)^<>(TRUE):E;

; Exit if not 8th mon
!!RD:C0/?(mon:y)/?(qty:y)/?(sourceId:y);
!!FU(eighth_Check8thMonTown):P(mon)/?(townType:y);
!!FU&(townType)=(NO_TOWN):E;

; Double check with source Id
!!VR(eighthSourceId:y):S(townId) *14 +21;[21 - for portal of summoning creature]
!!FU&(sourceId)<>(eighthSourceId):E;

; Set up recruit dlg behaviour
!!VR(flags):S1;                         [Close on Buy]

; Set up new recruit dialog based on Portal of Summoning creature quantity
!!FU(eighth_Get8thMonByTownType):P(townType)/(TRUE)/?(upgMon:y)/?(nonUpgMon:y);
!!FU(eighth_SetOrGet8thMonByTownId):P(townId)/d/?(availQty:y);

!!RD:C0/(upgMon:y)/(availQty)/?(sourceId);

!!if&(upgMon)<>(nonUpgMon);             [Check this in order to be compatible with my external script]
  !!RD:C1/(nonUpgMon:y)/(availQty)/?(sourceId); [Setting the same source ID here won't sync the quantity of slot #0 and #1]
!!en;

; Set up global var to sync the quantity of upgraded and non-upgraded
!!VRi^eighth_isEighthRecruitDlg^:S(TRUE);

; Sync quantity from slot #1 to slot #0, which would be reflected to Portal of Summoning quanity
!?FU(OnRecruitDlgAction)&i^eighth_isEighthRecruitDlg^;
!#VA(hiredQty:x);

!!RD:I?(dlgId:y)/?(townId:y)/?(dwellId:y)/?(slot:y); [Only the slot number matters]

!!if&(slot)=1;
  !!RD:C1/?(mon:y)/?(qty:y)/?(sourceId:y);
  !!RD:C0/?(mon:y)/(qty)/?(sourceId:y);
!!en;

!!VRi^eighth_isEighthRecruitDlg^:S(FALSE);

****************************************************************************************************
; LMB on creature slots in town
; Not currenlty working as it's hooked by HD
!?FU(eighth_OnTownDlgMouseClick);
!!FU:E;

!#VA(hook:x);

!!UN:C(hook)/(STRUCT_HOOK_CONTEXT_ESI)/4/?(msg:y) C(msg)/4/4/?(clickType:y);

!!if&(clickType)=(MOUSE_LMB_RELEASED);
  !!UN:C(msg)/8/4/?(itemId:y);
!!en;

**********************************************
**** Recreate Portal of Summoning feature ****
**********************************************
; We have to recreate Portal of Summoning as it's been replaced with 8th creature feature
; The recreated PoS won't be shown in Fort dialog though

; Set up array to store portal of summoning creatures for every town
; Content of the array: monType/num/monType/num/...

; Manage Portal of Summoning behaviour
; Disable normal update on new week when the 8th building is built
!?FU(eighth_OnUpdatePortalMonsterOnNewWeek);
!#VA(hook:x);

!!UN:C(hook)/(STRUCT_HOOK_CONTEXT_ECX)/4/?(townStruct:y);
!!UN:C(townStruct)/1/?(townId:y);

!!if&i^eighth_8thDwell_%(townId)^;
  !!SN:X?t/0;
  !!UN:C(hook)/(STRUCT_HOOK_CONTEXT_RET)/4/5016418;
!!en;

!?FU(OnAfterErmInstructions)&i^eighth_on^;
!!FU(NewIntArray):P96/-1/?i^eighth_portalOfSummoningList^/(M_STORED);

; After building (fake) Portal of Summoning
; The latest decision is to update fake portal of summoning even when it's not activated, this saves some resources when 8th dwelling is built later
!?FU(OnAfterBuildTownBuilding)&i^eighth_on^;
!#VA(townId:x) (buildingId:x);

*!FU&i^eighth_8thDwell_%(townId)^<>(TRUE):E; [Only when it's a fake Portal of Summoning]
!!FU&(buildingId)<>22:E;

!!CA0/(townId):T?(townType:y);
!!FU&(townType)<>(TOWN_DUNGEON):E;

!!FU(eighth_GetRandomMonForPortalOfSummoning):P(townId)/?(type:y);
!!FU&(type)=(NO_MON):E;

!!FU(eighth_SetUpPortalOfSummoningMon):P(townId)/(type);

; On new week, update fake Portal of Summoning
!?FU(OnEveryDay)&i^timerWeekDay^=1/i^timerOnce^/i^eighth_on^;
!!VR(x:y):S-1;

; loop through all towns
!!re i;
  !!UN:U(OBJ_TOWN)/(ANY_OBJ)/-1/(x)/(y:y)/(z:y);
  !!br&(x)<0;

  ; next town if Portal of Summoning is not built
  !!CA(x)/(y)/(z):T?(townType:y) B3/22;
  !!co|-1/(townType)<>(TOWN_DUNGEON);

  ; next town if 8th building is not built
  !!CA(x)/(y)/(z):U?(townId:y);
  *!co&i^eighth_8thDwell_%(townId)^<>(TRUE);

  ; next town if no dwelling taken
  !!FU(eighth_GetRandomMonForPortalOfSummoning):P(townId)/?(type:y);
  !!co&(type)=(NO_MON);

  !!FU(eighth_SetUpPortalOfSummoningMon):P(townId)/(type);
!!en;

; When clicking on Portal of Summoning
!?FU(OnTownMouseClick)&i^mouse_item^=22/i^mouse_action^=(MOUSE_LMB_PRESSED)/i^eighth_on^;
; Clicking on Portal of Summoning only
!!CA(CURRENT_TOWN):T?(townType:y);
!!FU&(townType)<>(TOWN_DUNGEON):E;      [clicking on dungeon (Portal of Summoning)]

; Don't show the fake Portal of Summoning if 8th building is not built
!!CA(CURRENT_TOWN):U?(townId:y);
!!FU&i^eighth_8thDwell_%(townId)^<>(TRUE):E;

!!CM:R0;

!!VR(index:y):S(townId) *2;
!!SN:Mi^eighth_portalOfSummoningList^/(index)/?(type:y);

!!if&(type)<=(NO_MON);
  ; Look for possible monster for Portal of Summoning if it's not yet valid
  !!FU(eighth_GetRandomMonForPortalOfSummoning):P(townId)/?(type:y);

  ; If any monster is found from dwelling slots, set it in the array
  !!if&(type)>(NO_MON);
    !!FU(eighth_SetUpPortalOfSummoningMon):P(townId)/(type);

  ; If no monster found, show msg
  !!el;
    !!FU(GetTextFileString):P^tcommand^/30/?(text:z);
    !!IF:M^%(text)^;
    !!FU:E;
  !!en;
!!en;

!!if&(type)>(NO_MON);
  !!VRi^eighth_isPortalOfSummoningDlg^:S(TRUE);
  ; Open recruit dialog without using any existing creatuer dialog
  !!RD:O-1/-1/0/(townId)/1;
!!en;

; Set up creature type and quantity when opening Portal of Summoning scripted dialog
!?FU(OnOpenRecruitDlg)&i^eighth_isPortalOfSummoningDlg^;
!#VA(slot:x) (flags:x) (dlgEnabled:x);

; Exit if not from town screen nor fort screen
!!SN:F^GetGameState^/?(mainDialogs[2]:y);
!!FU&(mainDialogs[1])<>(DLG_TOWN_SCREEN)/(mainDialogs[1])<>6147920:E; [6147920 - DLG_FORT_SCREEN]

!!CA(CURRENT_TOWN):U?(townId:y);
!!VR(index:y):S(townId) *2;
!!SN:Mi^eighth_portalOfSummoningList^/(index)/?(type:y);
!!VR(index):+1;
!!SN:Mi^eighth_portalOfSummoningList^/(index)/?(num:y);

!!VR(sourceId:y):S(townId) +22000;      [Offset: 22000]
!!RD:C0/(type)/(num)/(sourceId);

; Reduce the quantity from the array if any creature has been bought
!?FU(OnRecruitDlgAction)&i^eighth_isPortalOfSummoningDlg^;
!#VA(hiredQty:x);

!!RD:C0/?(type:y)/?(num:y)/?(sourceId:y);
!!CA(CURRENT_TOWN):U?(townId:y);
!!VR(index:y):S(townId) *2 +1;
!!SN:Mi^eighth_portalOfSummoningList^/(index)/(num);

; Reset global var
; Refreshing screen has to be put in this timing to work
!?FU(OnCloseRecruitDlg)&i^eighth_isPortalOfSummoningDlg^;
!!VRi^eighth_isPortalOfSummoningDlg^:S(FALSE);
!!SN:D;

!?FU(eighth_GetRandomMonForPortalOfSummoning);
!#VA(townId:x) (randomType:x);

; Set up basic info
!!VR(randomType):S(NO_MON);
!!CA0/(townId):O?(townOwner:y);
!!FU(NewIntArray):P?(availMonsList:y);

!!UN:X?(mapSize:y)/?(hasUnderground:y); 
; pass once through all cells of the map
!!re l/0/(hasUnderground)/1;  coord z
  !!re k/0/(mapSize)/1/-1;    coord y
    !!re i/0/(mapSize)/1/-1;  coord x
      !!OBi/k/l:T?(objType:y);

      ; If it is a hero, get object details underneath the hero
      !!if&(objType)=(OBJ_HERO);
        !!HEi/k/l:Z?(heroStruct:y);
        !!UN:C(heroStruct)/12/(UNC_INT)/?(objType:y);
      !!en;

      ; Get slot details if it is a dwelling
      !!if|(objType)=(OBJ_CREATURE_GENERATOR_1)/(objType)=(OBJ_CREATURE_GENERATOR_4);
        !!TRi/k/l:E?(isNotYellowSquare:y);

        !!if&(isNotYellowSquare)<>(TRUE);
          !!DWi/k/l:O?(owner:y);

          ; If it a dwelling belongs to the town owner, set it in the array
          !!if&(townOwner)=(owner);
            !!re j/0/3;
              !!DWi/k/l:Mj/?(type:y)/?(num:y);
              !!br&(type)<=(NO_MON);

              !!FU(Array_Push):P(availMonsList)/(type);
            !!en;
          !!en;
        !!en;
      !!en;
    !!en;
  !!en;
!!en;

; If any creature is found, get a random one
!!SN:M(availMonsList)/?(size:y);

!!if&(size)>0;
  ; Get a random monster from the array
  !!VR(random:y):R0/1/(size) -1;
  !!SN:M(availMonsList)/(random)/?(randomType);
!!en;

!?FU(eighth_SetUpPortalOfSummoningMon);
!#VA(townId:x) (mon:x);

!!MA:G(mon)/?(num:y);

; Write the found random monster type into the array
!!VR(index:y):S(townId) *2;
!!SN:Mi^eighth_portalOfSummoningList^/(index)/(mon);
!!VR(index):+1;
!!SN:Mi^eighth_portalOfSummoningList^/(index)/(num);
